{"version":3,"file":"static/js/304.c6767148.chunk.js","mappings":"4NAGMA,EAAOC,EAAAA,GAAAA,GAAS,mhBAwBhBC,EAAOD,EAAAA,GAAAA,GAAS,uOAUhBE,EAAQF,EAAAA,GAAAA,IAAU,oTAiBlBG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAY,4OAezBK,EAAOL,EAAAA,GAAAA,EAAQ,+R,SClERM,EAAa,SAAH,GAAoB,IAAdC,EAAM,EAANA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACV,EAAI,UACFQ,EAAOG,KAAI,gBAAGC,EAAE,EAAFA,GAAIC,EAAW,EAAXA,YAAaC,EAAK,EAALA,MAAK,OACnC,SAACZ,EAAI,WACH,UAACE,EAAU,CAACW,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAW,WACzD,SAACN,EAAK,CACJe,IACEL,EAAW,yCAC2BA,GAClC,4HAENM,IAAKL,EACLM,MAAM,MACNC,OAAO,MACPC,QAAQ,UAGV,SAAChB,EAAI,UAAEQ,QAdAF,EAgBJ,KAIf,C,qEC1BMW,E,QAAUtB,GAAAA,QAAc,2C,+JCAxBuB,E,QAAQvB,GAAAA,GAAS,sK,SC4CvB,EAvCa,WACX,OAA4BwB,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAA0BF,EAAAA,EAAAA,UAAS,MAAK,eAAjCG,EAAK,KAAEC,EAAQ,KAChBC,EAAa,qBAcnB,OAZAC,EAAAA,EAAAA,YAAU,WACc,aAOrB,OAPqB,0BAAtB,qHAE2BC,EAAAA,EAAAA,GAAUF,GAAY,KAAD,WAApCG,EAAI,EAAJA,KACRN,EAAUM,EAAKC,SAAS,gDAExBL,EAAS,EAAD,IAAQ,0DAEnB,uBARc,WACO,wBAQtBM,EACF,GAAG,IAEET,GAKH,2BACE,SAAC,IAAS,UACNE,GAMA,SAAC,IAAO,WACN,SAACJ,EAAK,+CANR,UAAC,IAAO,YACN,SAACA,EAAK,+BACN,SAACjB,EAAA,EAAU,CAACC,OAAQkB,WATrB,IAmBX,C,mICzCMU,EAAW,gCACXC,EAAU,mCAQhB,SAEeL,EAAU,GAAD,4CAUvB,OAVuB,0BAAxB,WAAyBF,GAAU,4EAO/B,OANIQ,EAAgBC,EAAAA,GAAAA,OAAa,CACjCC,QAAQ,GAAD,OAAKJ,GAAQ,OAAGN,GACvBW,QAAS,CAAE,eAAgB,oBAC3BC,OAAQ,CACNC,QAASN,KAEV,EAAD,OAEWC,EAAcM,MAAM,KAAD,+EACjC,+BAEcC,EAAc,EAAD,+CAY3B,OAZ2B,0BAA5B,WAA6BjC,EAAIkC,GAAI,gFASjC,OARIC,EAAUD,EAAI,WAAOA,GAAS,GAC9BhB,EAAU,gBAAYlB,GAAE,OAAGmC,GAC3BT,EAAgBC,EAAAA,GAAAA,OAAa,CACjCC,QAAQ,GAAD,OAAKJ,GAAQ,OAAGN,GACvBW,QAAS,CAAE,eAAgB,oBAC3BC,OAAQ,CACNC,QAASN,KAEV,EAAD,OAEWC,EAAcM,MAAM,KAAD,+EACjC,sBAEDZ,EAAUgB,UAAY,CACpBlB,WAAYmB,IAAAA,OAAAA,YAGdJ,EAAcG,UAAY,CACxBpC,GAAIqC,IAAAA,OAAAA,WACJH,KAAMG,IAAAA,O","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/base/Section.styled.js","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/APIservice.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: stretch;\n  gap: 20px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-auto-rows: auto;\n    grid-gap: 30px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n    grid-auto-rows: auto;\n    grid-gap: 32px;\n  }\n`;\n\nconst Item = styled.li`\n  padding: 10px;\n  width: 100%;\n  height: auto;\n  background-color: #fff;\n  border: 3px solid rgba(132, 132, 132, 0.5);\n  border-radius: 4px;\n  box-shadow: 0px 7px 10px -2px rgba(132, 132, 132, 0.5);\n`;\n\nconst Image = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n  background-color: darkgray;\n\n  @media screen and (min-width: 320px) {\n    width: 240px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 170px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  text-decoration: none;\n  color: inherit;\n\n  :hover,\n  :focus {\n    color: #3f93b9;\n    text-decoration: underline;\n  }\n`;\n\nconst Name = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  text-align: center;\n  @media screen and (min-width: 320px) {\n    width: 150px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 170px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 200px;\n  }\n`;\n\nexport { List, Item, Image, StyledLink, Name };\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, Image, StyledLink, Name } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, poster_path, title }) => (\n        <Item key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj'\n              }\n              alt={title}\n              width=\"100\"\n              height=\"160\"\n              loading=\"lazy\"\n            />\n\n            <Name>{title}</Name>\n          </StyledLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  padding: 30px 0;\n`;\n\nexport { Section };\n","import styled from 'styled-components';\n\nconst Title = styled.h1`\n  font-size: 30px;\n  font-weight: 500;\n  text-align: center;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n  color: rgb(0, 0, 0);\n`;\n\nexport { Title };\n","import { useState, useEffect } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { fetchData } from 'services/APIservice';\nimport { Container } from 'components/base/Container.styled';\nimport { Section } from 'components/base/Section.styled';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n  const [error, setError] = useState(null);\n  const pathParams = 'trending/movie/day';\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const { data } = await fetchData(pathParams);\n        setTrends(data.results);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getData();\n  }, []);\n\n  if (!trends) {\n    return null;\n  }\n\n  return (\n    <main>\n      <Container>\n        {!error ? (\n          <Section>\n            <Title> Trending today</Title>\n            <MoviesList movies={trends} />\n          </Section>\n        ) : (\n          <Section>\n            <Title> Whoops, something went wrong</Title>\n          </Section>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6d6a84090fff66fc1fd25eac643a37be';\n\n// const pathParams = [\n//   { trend: 'trending/movie/day' },\n//   { search: 'search/movie' },\n//   { movieDetails: `movie/${movieId}` },\n//   { cast: `movie/${movieId}/credits` },\n//   { reviews: `movie/${movieId}/reviews` },\n// ];\n\nasync function fetchData(pathParams) {\n  const axiosInstance = axios.create({\n    baseURL: `${BASE_URL}${pathParams}`,\n    headers: { 'Content-Type': 'application/json' },\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return await axiosInstance.get();\n}\n\nasync function fetchDataByID(id, path) {\n  const pathURL = path ? `/${path}` : '';\n  const pathParams = `movie/${id}${pathURL}`;\n  const axiosInstance = axios.create({\n    baseURL: `${BASE_URL}${pathParams}`,\n    headers: { 'Content-Type': 'application/json' },\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return await axiosInstance.get();\n}\n\nfetchData.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n};\n\nfetchDataByID.propTypes = {\n  id: PropTypes.string.isRequired,\n  path: PropTypes.string,\n};\n\nexport { fetchData, fetchDataByID };\n"],"names":["List","styled","Item","Image","StyledLink","Link","Name","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","width","height","loading","Section","Title","useState","trends","setTrends","error","setError","pathParams","useEffect","fetchData","data","results","getData","BASE_URL","API_KEY","axiosInstance","axios","baseURL","headers","params","api_key","get","fetchDataByID","path","pathURL","propTypes","PropTypes"],"sourceRoot":""}