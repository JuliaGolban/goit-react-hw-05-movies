{"version":3,"file":"static/js/123.174198ff.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","services/APIservice.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst GoBack = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 5px;\n  font-family: inherit;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.33;\n  color: #000;\n  text-decoration: none;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: #3f93b9;\n  }\n`;\n\nexport { GoBack };\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { GoBack } from './BackLink.styled';\n\nexport const BackButton = ({ to, children }) => {\n  return (\n    <GoBack to={to}>\n      <HiArrowLeft size=\"10\" />\n      {children}\n    </GoBack>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { Container } from 'components/base/Container.styled';\n\nconst MovieContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n\n  @media screen and (min-width: 320px) {\n    max-width: 320px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1280px;\n  }\n`;\n\nconst BoxDetails = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n  border: 3px solid rgba(132, 132, 132, 0.5);\n  border-radius: 4px;\n  box-shadow: 0px 7px 10px -2px rgba(132, 132, 132, 0.5);\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: 40px;\n    margin: 0 auto;\n    padding: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    align-items: flex-start;\n  }\n`;\n\nconst Image = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n  border-radius: 4px;\n  overflow: hidden;\n\n  @media screen and (min-width: 320px) {\n    max-width: 240px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 320px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 360px;\n  }\n`;\n\nconst InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  color: rgb(0, 0, 0);\n\n  @media screen and (min-width: 1280px) {\n    gap: 20px;\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.33;\n\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n  }\n`;\n\nconst SubTitle = styled.h2`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.33;\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nconst Description = styled.p`\n  max-height: 250px;\n  max-width: 270px;\n  overflow-y: auto;\n  font-size: 10px;\n  font-weight: 400;\n  line-height: 1.33;\n  margin-top: -5px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 240px;\n    font-size: 14px;\n    margin-top: -10px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 360px;\n  }\n`;\n\nconst Count = styled.span`\n  margin-left: 10px;\n  font-size: 14px;\n  font-weight: 500;\n  color: #3f93b9;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nconst BoxAdditional = styled.div`\n  margin-top: 30px;\n`;\n\nconst List = styled.ul`\n  display: inline-flex;\n  gap: 20px;\n`;\n\nconst ItemLink = styled(NavLink)`\n  display: flex;\n  align-content: center;\n  align-items: center;\n  padding: 6px;\n\n  font-size: 12px;\n  font-weight: 500;\n  text-decoration: none;\n  color: rgb(0, 0, 0);\n  border: 1px solid rgba(132, 132, 132, 0.5);\n  border-radius: 4px;\n  box-shadow: 4px 5px 10px -2px rgba(132, 132, 132, 0.5);\n\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    padding: 7px;\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 8px;\n    font-size: 18px;\n  }\n\n  &.active {\n    color: #fff;\n    background-color: rgba(63, 146, 185, 0.8);\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #fff;\n    background-color: rgba(63, 146, 185, 0.8);\n    box-shadow: 4px 5px 10px -2px rgba(132, 132, 132, 0.5) inset;\n  }\n`;\n\nexport {\n  MovieContainer,\n  BoxDetails,\n  BoxAdditional,\n  Image,\n  InfoWrapper,\n  Title,\n  SubTitle,\n  Description,\n  Count,\n  List,\n  ItemLink,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { fetchDataByID } from 'services/APIservice';\nimport { BackButton } from 'components/BackLink/BackLink';\nimport {\n  MovieContainer,\n  BoxDetails,\n  BoxAdditional,\n  Image,\n  InfoWrapper,\n  Title,\n  SubTitle,\n  Description,\n  Count,\n  List,\n  ItemLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const { data } = await fetchDataByID(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getData();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const {\n    id,\n    release_date,\n    poster_path,\n    title,\n    popularity,\n    vote_average,\n    vote_count,\n    genres,\n    overview,\n  } = movie;\n\n  const imgDefault =\n    'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n\n  return (\n    !error && (\n      <main>\n        <MovieContainer>\n          <BackButton to={backLinkHref}>Go back</BackButton>\n          <BoxDetails key={id}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : { imgDefault }\n              }\n              alt={title}\n              width=\"240\"\n              height=\"360\"\n              loading=\"lazy\"\n            />\n            <InfoWrapper>\n              <Title>\n                {title} {release_date.slice(0, 4)}\n              </Title>\n              <SubTitle>\n                Vote / Votes:\n                <Count>\n                  {vote_average.toFixed(2)} / {vote_count}\n                </Count>\n              </SubTitle>\n              <SubTitle>\n                Popularity:\n                <Count>{Math.floor(popularity).toLocaleString('ru')}</Count>\n              </SubTitle>\n              <SubTitle>Overview</SubTitle>\n              <Description>{overview}</Description>\n              <SubTitle>Genres</SubTitle>\n              <Description>\n                {genres\n                  .map(({ name }) => {\n                    return name;\n                  })\n                  .join(', ')}\n              </Description>\n\n              <SubTitle>Additional information</SubTitle>\n              <List>\n                <ItemLink to=\"cast\">Cast</ItemLink>\n                <ItemLink to=\"reviews\">Reviews</ItemLink>\n              </List>\n            </InfoWrapper>\n          </BoxDetails>\n          <BoxAdditional>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </BoxAdditional>\n        </MovieContainer>\n      </main>\n    )\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6d6a84090fff66fc1fd25eac643a37be';\n\n// const pathParams = [\n//   { trend: 'trending/movie/day' },\n//   { search: 'search/movie' },\n//   { movieDetails: `movie/${movieId}` },\n//   { cast: `movie/${movieId}/credits` },\n//   { reviews: `movie/${movieId}/reviews` },\n// ];\n\nasync function fetchData(pathParams) {\n  const axiosInstance = axios.create({\n    baseURL: `${BASE_URL}${pathParams}`,\n    headers: { 'Content-Type': 'application/json' },\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return await axiosInstance.get();\n}\n\nasync function fetchDataByID(id, path) {\n  const pathURL = path ? `/${path}` : '';\n  const pathParams = `movie/${id}${pathURL}`;\n  const axiosInstance = axios.create({\n    baseURL: `${BASE_URL}${pathParams}`,\n    headers: { 'Content-Type': 'application/json' },\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return await axiosInstance.get();\n}\n\nfetchData.propTypes = {\n  pathParams: PropTypes.string.isRequired,\n};\n\nfetchDataByID.propTypes = {\n  id: PropTypes.string.isRequired,\n  path: PropTypes.string,\n};\n\nexport { fetchData, fetchDataByID };\n"],"names":["GoBack","styled","Link","BackButton","to","children","size","MovieContainer","Container","BoxDetails","Image","InfoWrapper","Title","SubTitle","Description","Count","BoxAdditional","List","ItemLink","NavLink","movieId","useParams","useState","movie","setMovie","error","setError","backLinkHref","useLocation","state","from","useEffect","fetchDataByID","data","getData","id","release_date","poster_path","title","popularity","vote_average","vote_count","genres","overview","src","imgDefault","alt","width","height","loading","slice","toFixed","Math","floor","toLocaleString","map","name","join","Suspense","fallback","BASE_URL","API_KEY","fetchData","pathParams","axiosInstance","axios","baseURL","headers","params","api_key","get","path","pathURL","propTypes","PropTypes"],"sourceRoot":""}