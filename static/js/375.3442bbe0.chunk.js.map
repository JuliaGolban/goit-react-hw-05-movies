{"version":3,"file":"static/js/375.3442bbe0.chunk.js","mappings":"8SAGMA,EAAYC,EAAAA,GAAAA,IAAU,kNAStBC,EAAMD,EAAAA,GAAAA,IAAU,0DAKhBE,EAAQF,EAAAA,GAAAA,IAAU,4EAMlBG,EAAcH,EAAAA,GAAAA,IAAU,2FAMxBI,GAASJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAY,mZAwBrBM,EAAQN,EAAAA,GAAAA,GAAS,yFAMjBO,EAAWP,EAAAA,GAAAA,GAAS,yFAMpBQ,EAAcR,EAAAA,GAAAA,EAAQ,iE,SChDtBS,EAAS,IAAIC,EAAAA,EAENC,EAAe,WAAO,IAAD,IACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAK,eAAjCC,EAAK,KAAEC,EAAQ,KACtB,GAA0BF,EAAAA,EAAAA,UAAS,MAAK,eAAjCG,EAAK,KAAEC,EAAQ,KAGhBC,EAAmC,QAAvB,EAAiB,QAAjB,GADDC,EAAAA,EAAAA,MACaC,aAAK,aAAd,EAAgBC,YAAI,QAAI,UAmB7C,IAbAC,EAAAA,EAAAA,YAAU,WACc,aAQrB,OARqB,0BAAtB,qHAG2BC,EAAAA,EAAAA,GAAcZ,GAAS,KAAD,WAArCa,EAAI,EAAJA,KACRT,EAASS,GAAM,gDAEfP,EAAS,EAAD,IAAQ,0DAEnB,uBATc,WACO,wBAStBQ,EACF,GAAG,CAACd,KAECG,EACH,OAAO,KAGT,IAAQY,EACNZ,EADMY,GAAIC,EACVb,EADUa,aAAcC,EACxBd,EADwBc,YAAaC,EACrCf,EADqCe,MAAOC,EAC5ChB,EAD4CgB,WAAYC,EACxDjB,EADwDiB,OAAQC,EAChElB,EADgEkB,SAG9DC,EAAON,EAAaO,MAAM,EAAG,GAC7BC,EAAOP,EAAW,yCACgBA,GAClC,4HACAQ,EAAyB,IAAbN,EACZO,GAAO,OAAIN,EAAOM,MAAMC,KAAK,MACjC,OACGtB,IACC,6BACE,UAAClB,EAAS,YACR,SAACK,EAAM,CAACoC,GAAIrB,KACZ,UAAClB,EAAG,YACF,SAACC,EAAK,CAACuC,IAAKL,EAAMM,IAAKZ,EAAOa,QAAQ,UACtC,UAACxC,EAAW,YACV,UAACG,EAAK,WACHwB,EAAK,KAAII,EAAI,QAEhB,UAAC1B,EAAW,0BAAc6B,EAAS,QACnC,SAAC9B,EAAQ,wBACT,SAACC,EAAW,UAAEyB,KACd,SAAC1B,EAAQ,sBACT,SAACC,EAAW,UAAE8B,SAVRX,OAcZ,UAAC5B,EAAS,YACR,SAACS,EAAW,sCACZ,2BACE,yBACE,SAAC,KAAI,CAACgC,GAAG,OAAM,qBAEjB,yBACE,SAAC,KAAI,CAACA,GAAG,UAAS,2BAGtB,SAAC,EAAAI,SAAQ,CAACC,SAAUpC,EAAOqC,YAAY,UACrC,SAAC,KAAM,WAMnB,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  width: 100%;\n  padding: 40px 12px 40px 12px;\n  border-bottom: 2px solid rgba(132, 132, 132, 0.5);\n`;\n\nconst Box = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nconst Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n`;\n\nconst InfoWrapper = styled.div`\n  max-width: 768px;\n  margin-left: 20px;\n  color: rgb(0, 0, 0);\n`;\n\nconst GoBack = styled(Link)`\n  display: inline-block;\n  text-align: center;\n  width: 150px;\n  margin: 0 auto;\n  padding: 5px;\n\n  font-family: inherit;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  color: #000;\n  text-decoration: none;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: #3f93b9;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 30px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nconst SubTitle = styled.h2`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 20px;\n`;\n\nconst Description = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n`;\n\nexport {\n  Container,\n  Box,\n  Image,\n  InfoWrapper,\n  GoBack,\n  Title,\n  SubTitle,\n  Description,\n};\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { Link, Outlet } from 'react-router-dom';\nimport { fetchDataByID } from 'services/APIservice';\n// import { fetchData } from 'services/APIservice';\nimport NotiflixLoading from '../../helpers/Loader/NotiflixLoading';\nimport {\n  Container,\n  Box,\n  Image,\n  InfoWrapper,\n  GoBack,\n  Title,\n  SubTitle,\n  Description,\n} from './MovieDetails.styled';\n\nconst loader = new NotiflixLoading();\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  // const pathParams = `movies/${movieId}`;\n  // const ID = Number(movieId);\n  // const pathParams = `movies/${ID}`;\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        // const { data } = await fetchData(pathParams);\n        const { data } = await fetchDataByID(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getData();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { id, release_date, poster_path, title, popularity, genres, overview } =\n    movie;\n\n  let year = release_date.slice(0, 4);\n  let path = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : 'https://yt3.ggpht.com/AAKF_677TIvjFz_9xFF0R6PgiVd0kRpEtY6APSxSDRP65nXg8hkn9NFsz2bRd9_Z37DJ9D_b=s900-c-k-c0x00ffffff-no-rj';\n  let userScore = popularity * 100;\n  let name = [...genres.name].join(', ');\n  return (\n    !error && (\n      <main>\n        <Container>\n          <GoBack to={backLinkHref} />\n          <Box key={id}>\n            <Image src={path} alt={title} loading=\"lazy\" />\n            <InfoWrapper>\n              <Title>\n                {title} ({year})\n              </Title>\n              <Description>User Score: {userScore}%</Description>\n              <SubTitle>Overview</SubTitle>\n              <Description>{overview}</Description>\n              <SubTitle>Genres</SubTitle>\n              <Description>{name}</Description>\n            </InfoWrapper>\n          </Box>\n        </Container>\n        <Container>\n          <Description>Additional information</Description>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={loader.onLoading()}>\n            <Outlet />\n          </Suspense>\n        </Container>\n      </main>\n    )\n  );\n};\n"],"names":["Container","styled","Box","Image","InfoWrapper","GoBack","Link","Title","SubTitle","Description","loader","NotiflixLoading","MovieDetails","movieId","useParams","useState","movie","setMovie","error","setError","backLinkHref","useLocation","state","from","useEffect","fetchDataByID","data","getData","id","release_date","poster_path","title","popularity","genres","overview","year","slice","path","userScore","name","join","to","src","alt","loading","Suspense","fallback","onLoading"],"sourceRoot":""}